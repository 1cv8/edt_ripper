#Использовать "."
#Использовать cli

Перем Лог;

Процедура ВыполнитьПриложение()
	
	Приложение = Новый КонсольноеПриложение(ПараметрыПриложения.ИмяПриложения(),
			"Приложение для работы с файлами ошибок статических анализаторов",
			ЭтотОбъект);

	Приложение.Версия("version", ПараметрыПриложения.Версия());

	Приложение.Опция("v verbose", Ложь, "Вывод отладочной информация в процессе выполнения")
	.Флаговый();
	
	Приложение.Опция("f file", "", "Путь к внешнему файлу-коллектору замечаний")
	.ТСтрока();

	Приложение.ДобавитьКоманду("parse", "Создание отчета",
		Новый КомандаПарсерОтчетаЕДТ);

	Приложение.ДобавитьКоманду("publish", "Удаление из выбранного файла правил служебных блоков,
		| результирующий файл готов для загрузки в сонар",
		Новый КомандаПубликацияПравил);
	
	Приложение.Запустить(АргументыКоманднойСтроки);
	
КонецПроцедуры

Процедура ПередВыполнениемКоманды(Знач Команда) Экспорт
	
	ОтладкаВключена = Команда.ЗначениеОпции("verbose");

	ПараметрыПриложения.УстановитьРежимОтладки(ОтладкаВключена);

	ВнешнийФайлОписаний = Команда.ЗначениеОпции("file");

	Если ЗначениеЗаполнено(ВнешнийФайлОписаний) Тогда
		Файл = Новый Файл(ВнешнийФайлОписаний);
		Если НЕ (Файл.Существует() И Файл.ЭтоФайл()) Тогда
			Лог.КритичнаяОшибка("Файл %1 недоступен", ВнешнийФайлОписаний);
		КонецЕсли;
	КонецЕсли;

	ПараметрыПриложения.УстановитьКонтекстСохранения(ВнешнийФайлОписаний);

КонецПроцедуры

Лог = ПараметрыПриложения.Лог();

Попытка
	
	ВыполнитьПриложение();
	
Исключение
	
	Лог.КритичнаяОшибка(ОписаниеОшибки());
	ЗавершитьРаботу(1);
	
КонецПопытки;
